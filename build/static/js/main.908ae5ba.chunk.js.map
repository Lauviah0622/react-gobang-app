{"version":3,"sources":["Game/Background.js","Context.js","Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Frame","styled","div","Background","rows","columns","squares","Array","fill","map","_","id","createContext","StyledCell","className","x","y","player","data-x","data-y","data-player","props","StyledRows","StyledGame","placeChess","chessChart","checkWin","context","useContext","GameContext","board","row","boardRow","useEffect","rowsNum","columnsNum","onClick","e","target","getAttribute","AppWrapper","makeChart","recordArr","cell","forEach","record","StyledRecordBtn","index","date-record-id","App","useState","isGaming","setIsGaming","records","setRecord","winner","setWinner","current","next","playerState","setPlayerState","recordButtons","i","Provider","value","chesses","rowId","columnId","push","isWin","chess","ninjaInChess","reduce","res","dirCells","dir","rootChess","LINK_NUMBER","nextDirCells","filter","rootchess","length","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.908ae5ba.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Frame = styled.div`\r\n  pointer-events: none;\r\n  height: 100%;\r\n  display: grid;\r\n  position: absolute;\r\n  left: 15px;\r\n  top: 15px;\r\n  grid-template-rows: repeat(18, 30px);\r\n  grid-template-columns: repeat(18, 30px);\r\n  box-sizing: border-box;\r\n  & > div {\r\n    border-top: 1px solid black;\r\n    border-right: 1px solid black;\r\n  }\r\n\r\n  & > div:nth-of-type(18n + 1) {\r\n    /* border-bottom: 1px solid black; */\r\n    border-left: 1px solid black;\r\n  }\r\n\r\n  & > div:nth-last-of-type(-n + 18) {\r\n    border-bottom: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport default function Background({ rows, columns }) {\r\n  const squares = Array((rows - 1) * (columns - 1))\r\n    .fill(\"\")\r\n    .map((_, id) => {\r\n      return <div key={\"brd-\" + id}></div>;\r\n    });\r\n  return <Frame>{squares}</Frame>;\r\n}\r\n","import {createContext} from 'react';\r\nexport default createContext();\r\n","import styled from \"styled-components\";\r\n\r\nimport Background from \"./Background\";\r\nimport { useContext, useEffect } from 'react';\r\nimport GameContext from '../Context';\r\n\r\nfunction Cell({ className, x, y, player }) {\r\n  return (\r\n    <div className={className} data-x={x} data-y={y} data-player={player}>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StyledCell = styled(Cell)`\r\n  width: 30px;\r\n  height: 30px;\r\n  position: relative;\r\n  padding: 5px;\r\n  font-size: 30px;\r\n  & > div {\r\n    pointer-events: none;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: ${(props) =>{\r\n      if (!props.player) return 'transparant'\r\n      if (props.player === 'black') return \"#000\";\r\n      if (props.player === 'white') return \"#fff\";\r\n    }};\r\n    border: 1px solid transparent;\r\n    border-color: ${(props) => props.player && \"black\"};\r\n    border-radius: 50%;\r\n  }\r\n\r\n  &:not([data-player]):hover > div {\r\n    border-color: pink;\r\n  }\r\n`;\r\n\r\nconst StyledRows = styled.div`\r\n  display: flex;\r\n`;\r\n\r\n\r\nfunction Game({ className, placeChess, chessChart, checkWin }) {\r\n  const context = useContext(GameContext)\r\n\r\n  const handleCellClick = (e) => {\r\n    if (e.target.getAttribute('data-player')) return \r\n    placeChess(e.target.getAttribute('data-x'), e.target.getAttribute('data-y'))\r\n  }\r\n\r\n  const board = chessChart\r\n    .map((row, x) => {\r\n      const boardRow = row.map((player, y) => {\r\n        return <StyledCell \r\n        key={`cell- + [${y}, ${x}]`}\r\n        x={y}\r\n        y={x}\r\n        player={player}\r\n        />;\r\n      });\r\n      return <StyledRows key={\"row-\" + x}>{boardRow}</StyledRows>;\r\n    });\r\n\r\n  useEffect(checkWin, [chessChart]);\r\n  \r\n  return (\r\n    <div className={className}>\r\n      <Background rows={context.rowsNum} columns={context.columnsNum} />\r\n      <div onClick={handleCellClick}>{board}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StyledGame = styled(Game)`\r\n  position: relative;\r\n`;\r\n\r\nexport default StyledGame;\r\n","import { useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Game from \"./Game/Game\";\n\nimport GameContext from \"./Context\";\n\nconst COLUMNS = 19;\nconst ROWS = 19;\nconst LINK_NUMBER = 5;\n\nconst AppWrapper = styled.div`\n  margin: 50px auto;\n  width: 600px;\n`;\n\nconst createEmptyChart = () => Array(ROWS).fill(Array(COLUMNS).fill(null));\nconst makeChart = (recordArr) => {\n  return Array(ROWS)\n    .fill(null)\n    .map((row, y) => {\n      return Array(COLUMNS)\n        .fill(null)\n        .map((cell, x) => {\n          let player = null;\n          recordArr.forEach(\n            (record) =>\n              record.x === x && record.y === y && (player = record.player)\n          );\n          return player;\n        });\n    });\n};\n\nconst StyledRecordBtn = styled(RecordBtn)`\n  display: inline-block;\n  border: 1px solid black;\n  border-radius: 5px;\n  margin: 5px;\n`;\n\nfunction RecordBtn({ record, index, className }) {\n  return (\n    <div className={className} date-record-id={index}>\n      第{index}手<br/>\n      {record.player}：{`${record.x}, ${record.y}`}\n    </div>\n  );\n}\n\nfunction App() {\n  const [isGaming, setIsGaming] = useState(false);\n  // const [chessChart, setChessChart] = useState(createEmptyChart());\n  const [records, setRecord] = useState([]);\n  const [winner, setWinner] = useState(null);\n  const [playerState, setPlayerState] = useState({\n    current: \"black\",\n    next: \"white\",\n  });\n  const placeChess = (x, y) => {\n    if (!isGaming) return;\n    // const newChessChart = JSON.parse(JSON.stringify(chessChart));\n    // newChessChart[y][x] = playerState.current;\n    // setChessChart(newChessChart);\n    setPlayerState({\n      current: playerState.next,\n      next: playerState.current,\n    });\n    setRecord([...records, { x: +x, y: +y, player: playerState.current }]);\n  };\n\n  const startGame = () => {\n    setIsGaming(true);\n    // setChessChart(createEmptyChart());\n    setRecord([]);\n    setWinner(null);\n  };\n\n  const surrenderGame = () => {\n    setWinner(playerState.next);\n    setRecord([]);\n    setIsGaming(false);\n  };\n\n  const backInRecord = (id) => {\n    // setRecord\n    setRecord(records.slice(0, +id + 1));\n    if (playerState.next !== records[+id].player) {\n      setPlayerState({\n        current: playerState.next,\n        next: playerState.current,\n      })\n    }\n  }\n\n  const checkWin = () => {\n    if (!isGaming) return;\n    let chesses = [];\n    makeChart(records).forEach((row, rowId) => {\n      row.forEach((cell, columnId) => {\n        if (cell !== playerState.next) return;\n        chesses.push([columnId, rowId]);\n      });\n    });\n\n    let isWin = false;\n    chesses.forEach((chess, i, chesses) => {\n      let ninjaInChess = ([x, y]) => chesses.reduce((res, chess) => {\n        return res || chess[0] === x && chess[1] === y \n      }, false);\n\n      const inChesses = ([x, y]) => {\n        let res = false;\n        chesses.forEach((chess) => {\n          if (chess[0] === x && chess[1] === y) res = true;\n        });\n        return res;\n      };\n\n      const dirs = [\n        [1, 0],\n        [0, 1],\n        [1, 1],\n        [-1, 1],\n      ];\n\n      // 可能有連線方向的格子\n      let dirCells = dirs.map((dir) => ({\n        rootChess: chess,\n        dir,\n        cell: [chess[0] + dir[0], chess[1] + dir[1]],\n      }));\n      \n\n      for (let i = 0; i < LINK_NUMBER - 1; i++) {\n        // 可能方向的棋子\n        let linkChesses = dirCells.filter((cell) => ninjaInChess(cell.cell));\n        // 可能方向的下一個格子\n        let nextDirCells = linkChesses.map(({ rootchess, dir, cell }) => ({\n          rootChess: cell,\n          dir,\n          cell: [cell[0] + dir[0], cell[1] + dir[1]],\n        }));\n        dirCells = nextDirCells;\n        if (nextDirCells.length <= 0) break;\n      }\n\n      if (dirCells.length > 0) {\n        isWin = true\n      }\n    });\n    if (isWin) {\n      setIsGaming(false);\n      setWinner(playerState.next);\n    }\n  };\n\n  const recordButtons = records.map((record, i) => (\n    <StyledRecordBtn record={record} index={i} key={`recordBtn-${i}`} />\n  ));\n\n  const handleClickRecord = (e) => {\n    if (!e.target.getAttribute('date-record-id')) return \n    backInRecord(e.target.getAttribute('date-record-id'));\n  }\n\n  return (\n    <GameContext.Provider value={{ rowsNum: ROWS, columnsNum: COLUMNS }}>\n      <AppWrapper>\n        <header>\n          {isGaming || <h3>Press Start to Start Game</h3>}\n          {isGaming && (\n            <h3>\n              Current Player: {playerState.current}, Next Player:{\" \"}\n              {playerState.next}\n            </h3>\n          )}\n          <h3>{winner || \"No body\"} is win</h3>\n          {isGaming || <button onClick={startGame}>Start</button>}\n          {isGaming && <button onClick={surrenderGame}>Surrender</button>}\n        </header>\n        <Game\n          placeChess={placeChess}\n          chessChart={makeChart(records)}\n          checkWin={checkWin}\n        />\n        <footer onClick={handleClickRecord}>{recordButtons}</footer>\n      </AppWrapper>\n    </GameContext.Provider>\n  );\n}\n\nexport default App;\n\n/* \nHeader: next Player, \nMain\n\n\n*/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\n\nReactDOM.render(\n  <>\n      <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}